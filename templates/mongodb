from flask import Flask, render_template, request, redirect, url_for, flash, session
import pymongo
import hashlib

app = Flask(__name__)
app.secret_key = 'your_secret_key'  # Replace with your secret key

# MongoDB connection setup
client = pymongo.MongoClient('mongodb://localhost:27017/donation')
db = client['NGO_DB']  # Replace 'NGO_DB' with your database name
donations_collection = db['donations']
volunteers_collection = db['volunteers']
registrations_collection = db['registrations']  # Corrected the collection name

# Sample user data (you should implement user registration and authentication)
users = [
    {'username': 'user1', 'password': 'password1'},
    {'username': 'user2', 'password': 'password2'},
]

@app.route('/donate', methods=['GET', 'POST'])
def donate():
    if 'username' in session:
        if request.method == 'POST':
            # Handle form submission for donations
            # You can access form data using request.form
            # Process the donation data here and store it in the donations_collection
            donation_data = {
                'username': session['username'],
                'email': session.get('email'),  # Make sure email is set in the session
                'amount': request.form.get('amount'),
                'message': request.form.get('message')
            }
            donations_collection.insert_one(donation_data)
            flash('Donation received successfully!')
            return redirect('/donate')
        return render_template('donate.html', username=session['username'])
    return redirect('/login')  # Redirect to the login page if not logged in

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        # Get registration form data
        username = request.form.get('username')
        lastname = request.form.get('lastname')
        email = request.form.get('email')
        gender = request.form.get('gender')
        address = request.form.get('address')
        occupation = request.form.get('occupation')
        country = request.form.get('country')

        # Check if the username is already taken (you can add more validation)
        existing_user = "users_collection".find_one({'username': username})
        if existing_user:
            flash('Username already exists. Please choose another username.')
        else:
            
            

            # Create a new user document and insert it into the users_collection
            new_user = {
                'username': username,
                'lastname': lastname,
                'email': email,
                
                'gender': gender,
                'address': address,
                'occupation': occupation,
                'country': country,
            }
            "users_collection".insert_one(new_user)
            flash('Registration successful! Please log in.')
            return redirect('/login')

    return render_template('registration.html')

@app.route('/volunteer_signup', methods=['GET', 'POST'])
def volunteer_signup():
    if request.method == 'POST':
        # Get volunteer sign-up form data
        name = request.form.get('name')
        email = request.form.get('email')
        phone = request.form.get('phone')
        interest = request.form.get('interest')  # Fix the typo

        # Create a new volunteer document and insert it into the volunteers_collection
        new_volunteer = {
            'name': name,
            'email': email,
            'phone': phone,
            'interest': interest,
        }
        volunteers_collection.insert_one(new_volunteer)
        flash('Thank you for signing up as a volunteer!')
        return redirect('/volunteer')

    return render_template('volunteer_signup.html')

@app.route('/')
def home():
    return render_template('home .html')

@app.route('/contactus')
def contactus():
    return render_template('contactus.html')

@app.route('/aboutus')
def aboutus():
    return render_template('aboutus.html')

@app.route('/help')
def help():
    return render_template('help.html')


@app.route('/join')
def join():
    return render_template('joinwithus.html')






# Define other routes and functionality for your NGO website here

if __name__ == '__main__':
    app.run(debug=True)
